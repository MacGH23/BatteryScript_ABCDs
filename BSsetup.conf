[Setup]
# Change to 1 if you setup everything and accept the disclaimer
# THERE IS NO GUARANTEE FOR AN ERROR FREE EXECUTION
# YOU TAKE THE 100% RISK IF YOU USE THIS SCRIPT !!!
# THE AUTHOR IS NOT LIABLE FOR ANY DAMAGE !!
# YOU HAVE BEEN WARNED !
# BATTERIES CAN BE DANGEROUS! BE SURE YOU KNOW WHAT YOU ARE DOING !!
#
# ONLY FOR USE WITH LIFEPO4 CELLS !!! 
# BATTERIES CAN BE DANGEROUS      !!! 
# CHECK ALL PARAMETERS CAREFULLY !!!
#
# IMPORTANT NOTES !!
#
# DO NOT UPDATE THE METER VALUES LESS THAN 2 SECONDS !
# 
# OTHERWISE THE SCRIPT CAN HANGUP OR THE HARDWARE CAN DECREASE FASTER !
# 
# FOR MEANWELL DEVICES CHANGE "MeterUpdateCounter" BELOW, SEE EXPLANATION ! 
i_changed_my_config = 1

#If you use BS_Start for multible configuration, the last used is saved
BSstart_UsedConfig = 2
#Check Server for Meter before startup to be sure you can connect.
BSstart_UseServerPing   = 1

# Enter Loglevel 0,10,20,30,40,50 
# CRITICAL   50
# ERROR      40
# WARNING    30
# INFO       20
# VERBOSE    15 this is to get detailed output of the script, but not from the classes
# DEBUG      10
# NOTSET      0
loglevel                  = 20
logpath                   = /home/pi/bs.log
logtoconsole              = 1
logtofile                 = 0
#log all to one file or create a new with every start
logappendfile             = 0

#You can log to syslog, but this can be a lot of data !
#Should be used when run as a service after fully tested with your environment and loglevel set to warning
logtosyslog               = 0

#For debug or information you can show the runtime for each meter update
ShowRuntime               = 1

##########################################################################
# LCD setup 
# 0 = Disabled
# 1 = LCD 2x16 to 4x20, init with 4x20, but you can take care about how many lines you use
Selected_LCD   = 1
#lcd i2c adr in int format 0x27 = 39
lcdi2cadr      = 39

##########################################################################
# GPIO setup 
# Note: You have to program the result of the button press on your own
# GPIO section is in the beginning of the script
# 0 = Disabled
# 1 = Enabled
# GPIO PIN Nr. in BCM format
Use_GPIO = 1
# GPIO PIN = 0 = not used
gpio1 = 17
gpio2 = 27
gpio3 = 22
gpio4 = 0

##########################################################################
# Webserver setup 
# Enable the internal WebServer for information and options
# 0 = Disabled
# 1 = Enabled
Use_WebServer = 1
WSport = 9000
# Leave IP empty to use the first IP, specify if you have multiple interfaces !
WSipadr = 

### BMS USD ##############################################################
# For SOC Software can calculate the SOC form DC voltage from BatteryVoltageSource (see below)
# for all other featrues a BMS should be used !
# DISABLED  = 0
# Software  = 1 #not fully implemented 
# JKBMS     = 2
# DalyBMS   = 3
# UNIBMS    = 100 #Universal BMS lib based on https://github.com/mr-manuel/venus-os_dbus-serialbattery
#                 uses autodetect or BMS list in /UNIBMS/config.ini !
#                 Check /UNIBMS/config.ini for paramter you have to enter there
#                 BMS_TYPE =        #enter your BMS there for a faster connect and disable autodetect   
#                 CAN_PORT =        #if you use can as interface
#                 BLUETOOTH_BMS =   #for bluetooth connection
#                 Bluetooth is not recommended at all ! Use a cable for BMS is definitly more secure !!
Selected_BMS = 100

# Which connection you use for UNIBMS, you need to specify it here also
# 0: normal connection via USB / RS232 / RS485
# 1: JKBMS bluetooth
# 2: JBDBMS bluetooth
# 3: JKBMS / DALY can
UNIBMSType   = 0

#BMS Device
# e.g.
# /dev/ttyAMA0
# /dev/ttyUSB0
BMS_device = /dev/ttyAMA0

#DalyBMS
#use sinowealth method or normal
#0:normal
#1:sinowealth
BMS_daly_use_sinowealth = 0

#Discharge until ..., -1 = Don't check BMS SOC Level at all, let BMS/Voltage control the stopping
#Check if your BMS SOC Value matches the real SOC, otherwise use only Voltages
BMS_minSOC = -1

#When the charger stopped charging because of BMS_minSOC, 
#this value defines when discharging is allowed again
#If you don't want to use it, set to 0 !
#Must be higher as BMSminSOC !
BMS_RestartSOC = 5

#Max Temperature for BMS
BMS_MaxTempMosFet = 45
#Temperature 1/2 depending where you install the sensors
BMS_MaxTemp1      = 33
BMS_MaxTemp2      = 33

### Battery DC voltage read ##############################################################
# Which device should be used for Batetry DC Voltage read
# 0 = Disabled, can not be used, because a voltage is needed for error prevention
# DISABLED    = 0  #not possible, you really need a BatteryVoltage for running this script
# BMS         = 1
# Charger     = 2
# Discharger  = 3
BatteryVoltageSource = 1

# If the reading of the DC voltage is not correct, you can adjust it +/- value in *100 value 
# 0,15V = 0,15*100 = 15
BatteryVoltageCorrection = 0

#The milliAh value will be calculated by charging and discharging
#Set to 0 if Battery Empty from this script is reached
EstBatteryWh = 7426474

##########################################################################
# Measurements for calculating Dis-Charge power average of power event (smooth the power output)
# You can specify for Charger and Discharger separately if you like
# 0=forbidden ;-)
# 1=just use the actual power value
# 2=average of 2 power events
# 3=...
ChargerPowerCalcCount    = 4
DisChargerPowerCalcCount = 1

# Select the method to control the charger / discharger
# see "def process_power(val)" --> in the script !!
# you can use the already implemented or implement your own
# 0   = DISABLED - only for debug do not use
# 1   = Universal simple Charge / Discharge method
# 255 = Simulator
PowerControlmethod = 1

### USED CHARGER #########################################################
# BIC-2200      = 0
# NPM-abc0      = 1
# ConstantBased = 2   (constant charger only to switch on/off with e.g. external switch)
# Simulator     = 255 (only show the value)
Selected_Device_Charger = 0

### USED DISCHARGER ######################################################
# BIC-2200                 = 0
# Lumentree                = 1
# Soyo 1000W/1200W RS485   = 2
# Simulator                = 255
Selected_Device_DisCharger = 0

###########################################################################
#### M E T E R  /  M Q T T ################################################
###########################################################################
# Time between two meter updates in seconds
# Irgore updates smaller then x seconds and wait for next meter update
# Only in full seconds ! (NO 1.5)
MeterDelaytime = 1

# Script needs the Meter Power in 
# Positive value = Get power from grid
# Negavite value = Get power from PV Solar
# If your Meter send the data in oposite way, you can adjust it here
# This is very critical for the correct calculation !
# Be sure that this is right !
MeterSwapValue = 0

# If you want to stop the charger if connection to meter is lost 
# to prevent overcharge or costs
MeterStopOnConnectionLost = 1

# select where the power value should be read
# 0   = mqtt - get the WATT value from mqtt Server (e.g. iobroker)
# 1   = http - get WATT value from webserver ESP32 with Tasmota see options below
# 255 = Simulator (send a random +/- value)
GetPowerOption  = 0

# http Request option
# http device have to send WATT + and - : positiv = from Grid, negative = from Solar/Battery
# which http request should be used
# IP and port
# 0 = not used !
# 1 = Shelly EM
# 2 = Shelly 3EM
# 3 = Shelly 3EMPro
# 4 = Shelly TASMOTA
# 5 = Shelly SHRDZM
# 6 = Shelly EMLOG
# 7 = IOBROKER SIMPLE REST API
# 8 = NOT implemented now ! Shelly HOMEASSISTANT 
# 9 = Shelly VZLOGGER
http_get_option       = 7
http_ip_address       = 192.168.2.8
http_ip_port          = 8087
http_user             = NONE
http_pass             = NONE
http_emlog_meterindex = 0
http_vzl_UUID         = NONE
http_iobrogerobject   = StromAktuellSE 

#http Request option
#after x seconds get new power value
#do not use less than 2 !
http_schedule_time = 2

#mqtt settings for your MQTT server
# 
mqttserver= 192.168.2.8
mqttport  = 1883
mqttuser  = mqtt
mqttpass  = mqtt
#IMPORTANT
#The subscription topic must have the power in WATT (+ and -) 
#positiv = from Grid, negative = from Solar/Battery
#mqttsubcribe = smartmeter/0/1-0:16_7_0__255/value
mqttsubscribe = 0_userdata.0.StromAktuellSE

#mqttPublish value to broker
mqttpublish         = 1
#empty string = do not use
mqttpublishWATT     = Battery/Status/Watt
mqttpublishSOC      = Battery/Status/BatterySOC
mqttpublishBatVolt  = Battery/Status/BatteryVoltage

#mqttPublish of mqttpublishWATT only of above +/- value to broker
#0 = disable (mainly for BIC2200 with always on)
mqttpublishWATTCut     = 8

#self defined mqtt actions
#topic, payload and name for web
#name without " " spaces !
#paylod is static, for sripting at mqtt server
mqttaction1topic    = Battery/Status/Refreshtime
mqttaction1payload  = 1
mqttaction1name     = Refresh_Sec1
mqttaction2topic    = Battery/Status/Refreshtime
mqttaction2payload  = 2
mqttaction2name     = Refresh_Sec2
mqttaction3topic    = TOPIC/NAME
mqttaction3payload  = 0
mqttaction3name     = NOT_DEFINED
mqttaction4topic    = TOPIC/NAME
mqttaction4payload  = 0
mqttaction4name     = NOT_DEFINED

##########################################################################
#### ( D I S ) - C H A R G E R - C O N F I G #############################
##########################################################################

##########################################################################
#Constant Based Charger with external switch
#Devid: 
#0: Tasmota
#1: Shelly
#Use MaxChargeWATT to specify the output power
CBC_devid = 0
CBC_ipadr = 192.168.2.71
#prevent switch on/off too often, the value will be added to MaxChargeWATT (e.g. add 50W or 100W depends on your charger)
#Otherwise 
CBC_wattdelta = 100
CBC_user  = 
CBC_pass  = 

###### G E N E R A L #####################################################
#General info, details also set in sections of the charger
#Min Watt that the charger can provide, see datasheet
#NOTE: For Meanwell specify in Meanwell section in Ampere
MinChargeWATT              =     0  

#Max Watt what the charger can provide, see datasheet
#NOTE: For Meanwell specify in Meanwell section in Ampere
MaxChargeWATT              =  480

#How much Watt the discharger / Inverter can provide.
#Check for Lumentree what is the real max output at max set. At 24V the output is lower because of limited current
#Lumentree 600 @ 24V has only 570W max !
#If you have more than 1 installed, this value must be the total of all installed discharger !
#NOTE: For Lumentree it is calculated by the values you specify in the Lumentree lt[x]_maxwatt section !
#NOTE: For Meanwell specify in Meanwell section in Ampere
#NOTE: For Soyo specify in Soyo section
MaxDisChargeWATT           =   570  

#Min Watt what the discharger / Inverter can provide, normally 0; 
#Lumentree      600 = 27W     --> use 28 to be sure ;-)
#Lumentree/SUN 1000 = 20-30W  --> use 30 to be sure ;-)
#Lumentree/SUN 2000 = 70W-80W --> use 80 to be sure ;-)
#NOTE: For Meanwell specify in Meanwell section in Ampere
MinDisChargeWATT           =    28  

#LastInverterPower hyteresis, dont change the charging if new value in this range (+ and -)
LastChargePower_delta      =    15

#LastInverterPower hysteresis, do not change the output if new value in this range (+ and -)
LastDisChargePower_delta   =    15

#Reduce x Watt from Charger output to prevent charging from GRID 
#positive value, reduce charging Watt
#negative value, not implemented
ZeroDeltaChargerWATT       =    10

#Reduce/Add x Watt from Discharger output to prevent output/input to GRID 
#positive value, minimize Battery output to GRID (less Battery than needed)
#negative value, minimize get power from GRID (more Battery than needed)
ZeroDeltaDisChargeWATT     =    0

# How much Meter changes count before change output
# #### IMPORTANT FOR MEANWELL ####
# Important since Meanwell are limited to power changes to 4.000.000 writes
# 4.000.000 / 10 (years) / 365 (days) / 8 (hours sun) / 60 (min) = 2,3 changes / min for 10 year
# 60 / 2,3 = every 26 seconds.
# For NPB and BIC is a newer firmware available where you can disable this (from April - 2024)
# Just try to set Bit 10 of systemconfig. If writable you can disable it
# since there will be no changes if the same value (in the range above) or max value, 
# I guess every 15 seconds should be OK for min. 10 years for NPB Charger -> 15Sec/2powerrequests = 7,5 = 8
# For BIC2200 you should use a higher value, min 30sec. /2 = 15
# METER should not update more than 2 seconds, please adjust the value accordingly ! 
# You can specify for charge and discharge separately, can also be the same value
MeterUpdateChargeCounter    = 1
MeterUpdateDisChargeCounter = 1


##########################################################################
# Lumentree / Trucki / TruckiRS485 SUN10000 parameters ###################
##########################################################################
#Lumentree/Trucki devtype
# 0 = Lumentree + Lumentree with self build Trucki addon PCB
# 1 = Trucki RS485/UART for SUN1000  (https://github.com/trucki-eu/RS485-Interface-for-Sun-GTIL2-1000)
lt_devtype = 0

# If a lumentree is installed but you want to use another Device or simulator, 
# the lumentree will start at max power during startup, this will prevent this
lt_foreceoffonstartup    = 1

# Max. Efficacy Factor in % of the Lumentree (datasheet), needed for Ah calculation 
# Check with your setup if this match and adjust if needed
lt_efficacy_factor = 90

#Max Temperature for the device (for all the same). If Temp > MaxTemp = Stop
lt_MaxTemp = 60

#How much Lumentree/Trucki devices you have installed. Max is 3
lt_count    = 1

# Power in WATT ! 
# 570W = 570
# select the right device and values for each Lumentree or Trucki
lt1_device  = /dev/ttyUSB0
lt1_address = 1
lt1_maxwatt = 570

lt2_device  = 
lt2_address = 1
lt2_maxwatt = 0

lt3_device  = 
lt3_address = 1
lt3_maxwatt = 0

##########################################################################
# Soyo 1000W/1200W        ################################################
##########################################################################
# select the right device and values for soyo device
soyo_device  = /dev/ttyAMA0

# Power in WATT ! 
# 1000W = 1000
soyo_maxwatt = 1000

# Max. Efficacy Factor in % of the Soyo (datasheet), needed for Ah calculation 
# Check with your setup if this match and adjust if needed
soyo_efficacy_factor = 90

##########################################################################
# Here you specify your main parameter for charging
# The Meanwell min/max parameter are already stored in the mwcan.ini, 
# can can not be changed here 
##########################################################################

#IMPROTANT: ALL VOLTAGES AND CURRENT IS NEEDED IN (VALUE) * 100 !!! 
#e.g. 3,45V * 100 = 345 or 25A = 25*100 = 2500
#For setup parameters make sure you measure the voltage with a good multimeter, e.g. the MW has a +/- value
#Specify then the exact current and voltage you want to use 

#How much Cells do you have in your Battery  
CellCount              = 8

#How much AH has each Cell, needed for calculation of Battery state
CellAH                 = 290

#Max cell voltage for calculation of max battery Chargevoltage (e.g. 8 cells * 3,45V = 27,60 --> 8 * 345 = 2760) 
#Max voltage for charging the battery
#Common is 3,45V, MAX is 3,65V ! 
CellvoltageMax         = 345

#Restart cell voltage for restart the charging (e.g. 8*331 = 2648 = 26,48) 
#Should be (a bit) lower than CellvoltageMax 
#When the charger stopped charging because of low current, 
#this value defines when charging is allowed again
#Voltage drop after stop charging
CellvoltageMaxRestart  = 334

#Min cell voltage for calculation of min Battery voltage (e.g. 8*305 = 2440 = 24,40V) 
#mainly done via BMS SOC check but normally not very exact. 
#you should use the voltage as better indicator 
#e.g. Common is 3,01V, MIN is 2,50V ! 
CellvoltageMin         = 305

#Restart cell voltage for restart the discharging (e.g. 8*313 = 2504 = 25,04V) 
#Needs to be higher than CellvoltageMin
#When the Discharger stopped discharging because of low voltage, 
#this value defines when discharging is allowed again, because the Cell Voltage raises after stop discharging
CellvoltageMinRestart  = 320

#Current *100 --> 25,0A * 100 = 2500
#Can be the maximum of the device or a lower value
MaxChargeCurrent          = 7800  

#Current *100  --> 7,2A * 100 = 720
#Can be the minimum of the device or a higher value 
MinChargeCurrent          =  100  

#Current *100  --> 5,0A * 100 = 500
#Should be a lower value than the minimum of the device 
#When should the charger stop charging and assume the Battery is full
#Normally if the chargcurrent gets lower than MinChargeCurrent
#You can still charge the Battery (like float) until STOP current is reached
#Set to 0 if you do not want to stop 
StopMinChargeCurrent          =  100  

#Current *100
#Can be the minmum of the device or a higher value 
MinDisChargeCurrent       =   90

#Current *100
#Can be the maximum of the device or a lower value 
MaxDisChargeCurrent       = 7000  

#how much power difference is OK
#not used now
ChargerCurrentDiffHyst    =    0   

#how much current (A) is allowed before start discharge in *100 notation, e.g. 0.1A = 10 (0.1A * 230V = 23W)
DisChargerCurrentMin      =   10   

##########################################################################
# Meanwell parameters ####################################################
##########################################################################
# CAN ID from the Device, set up by jumper on the device
# BIC-2200 --> 00 to 07, all open = 07
# NPM-abc0 --> 00 to 03, all open = 03
MW_USEDID = 03

#Voltage in from Grid correction, NPB hat +/- 10V, you should check it with voltmeter and set the difference (with "-" if negative)
Voltage_ACIN_correction     =   -9  

#Max Temperature for the device. If Temp > MaxTemp = Stop
MW_BIC2200_MaxTemp = 50
MW_NPB_MaxTemp     = 50

#Voltage correction for Charge and DisCharge voltage in *100: 
#Multimeter 27,60V, Readout = 27,68V ==> Set to -8 ==> 27,68V + (-8) = 27,60V
#MW has +/- 0,24V specified
#Measure the outputvoltage of the MW Device with a good multimeter
#Discharge is not so critical as long as you do not specify absolute minimum
#Chargevoltage should be correct as good as can be. Otherwise too high or too low voltage used
#This values only applies to the Discharger and Charger Set settings, not the reading of the voltage value from the device !
#For reading adjustment of DC Voltage correction see "BatteryVoltageCorrection" above
MW_NPB_ChargeVoltCorr    = -3
MW_BIC_ChargeVoltCorr    = 2
#BIC -8
MW_BIC_DisChargeVoltCorr = -10

#Do not switch the BIC2200 on/off during charging / discharging. Only switch direction.
#be carefull !! This can cause an overcharge problem if the CellvoltageMax is set too high (max 345 !)
#If the Battery is empty the BIC will use power form the grid to hold CellvoltageMin ! 
#Only use this option if you use BIC2200 as charger and discharger !
MW_BIC2200_ForceAlwaysOn = 1

#Use Voltage Adjust for NPB-xyz.
#This will adjust the voltage to a lower charge voltage to reduce the output current.
#The Device can then charge below min charge current but not 100% exact.
#Only useable if you have EEPROM write disabled, otherwise too much changes to the device
MW_NBPVoltageAdjust = 0

#Max. efficiency factor in % of the BIC2000 DisCharger mode (datasheet), needed for Ah calculation 
#Check with your setup if this match and adjust if needed
MW_BIC2200_efficacy_factor = 92

# Meanwell counter for changes. READ ONLY !!
MW_NPB_COUNTER = 114820
MW_NPB_COUNTER_LAST = 114820_03-11-2024, 12:37
MW_BIC_COUNTER = 30232
MW_BIC_COUNTER_LAST = 30232_03-11-2024, 12:37
